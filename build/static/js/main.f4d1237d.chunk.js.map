{"version":3,"sources":["card.js","bin.js","games.js","index.js"],"names":["style","height","width","Card","props","state","react_default","a","createElement","className","disabled","Object","assign","opacity","value","onClick","index","Bin","games","name","question_type","values","answer","operation","instruction","question_text","distractors","Board","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","cards","i","length","push","shuffled_cards","shuffle","data","fromJS","complete","game_index","chosen_cards","j","Math","floor","random","_ref","card_index","_this2","num_chosen_cards","get","count","newStateData","update","list","console","log","updateIn","card","set","setState","setTimeout","handleAnswer","_this3","chosen_card_indexes","toJS","first_chosen_value","getIn","second_chosen_value","checkIfCorrect","clear","checkIfComplete","num_values","num_cards","num_hidden_cards","key","handleClick","bind","size","padding","renderCard","bin","options","restartGame","type","id","data-toggle","aria-haspopup","aria-expanded","renderGameOptions","renderGameDropdown","renderBins","renderCards","React","Component","Game","src_Board","ReactDOM","render","src_Game","document","getElementById"],"mappings":"2PAEMA,SAAQ,CACZC,OAAQ,OACRC,MAAO,QA0BMC,MAtBf,SAAcC,GACZ,MAAoB,WAAhBA,EAAMC,MAENC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,yBAAyBC,UAAU,EAAMV,MAAOW,OAAOC,OAAO,GAAIZ,EAAO,CAACa,QAAS,KAClGT,EAAMU,OAGc,WAAhBV,EAAMC,MAEbC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,uBAAuBC,UAAU,EAAMV,MAAOA,GAC7DI,EAAMU,OAKTR,EAAAC,EAAAC,cAAA,UAAQC,UAAU,yBAAyBT,MAAOA,EAAOe,QAAS,kBAAMX,EAAMW,QAAQX,EAAMY,SACzFZ,EAAMU,QCtBTd,EAAQ,CACZE,MAAO,OACPD,OAAQ,OAYKgB,MARf,SAAab,GACX,OACEE,EAAAC,EAAAC,cAAA,UAAQC,UAAU,8BAA8BC,UAAU,EAAMV,MAAOA,GACpEI,EAAMU,QCXEI,EAAA,CACb,CACEC,KAAM,gBACNC,cAAe,QACfC,OAAQ,CAAC,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,IAC/CC,OAAQ,EACRC,UAAW,WACXC,YAAa,kDACbC,cAAe,CAAC,cAChBC,YAAa,IAEf,CACEP,KAAM,yBACNC,cAAe,QACfC,OAAQ,CAAC,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,IACxCC,OAAQ,GACRC,UAAW,WACXC,YAAa,kDACbC,cAAe,CAAC,OAAQ,MACxBC,YAAa,CAAC,GAAI,IAEpB,CACEP,KAAM,qBACNC,cAAe,QACfC,OAAQ,CAAC,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC3CC,OAAQ,GACRC,UAAW,MACXC,YAAa,kCACbC,cAAe,CAAC,MAAO,SACvBC,YAAa,IAEf,CACEP,KAAM,wBACNC,cAAe,QACfC,OAAQ,EAAE,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAChDC,OAAQ,EACRC,UAAW,MACXC,YAAa,sCACbC,cAAe,CAAC,MAAO,QACvBC,YAAa,IAEf,CACEP,KAAM,wBACNC,cAAe,QACfC,OAAQ,EAAE,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAClDC,QAAS,GACTC,UAAW,WACXC,YAAa,+CACbC,cAAe,CAAC,QAAS,UACzBC,YAAa,KCnCXC,cACJ,SAAAA,EAAYvB,GAAO,IAAAwB,EAAAjB,OAAAkB,EAAA,EAAAlB,CAAAmB,KAAAH,GACjBC,EAAAjB,OAAAoB,EAAA,EAAApB,CAAAmB,KAAAnB,OAAAqB,EAAA,EAAArB,CAAAgB,GAAAM,KAAAH,KAAM1B,IAIN,IAHA,IACI8B,EAAQ,GACRb,EAASH,EAFI,GAEcG,OACtBc,EAAE,EAAGA,EAAId,EAAOe,OAAQD,IAC/BD,EAAMG,KAAK,CAACvB,MAAOO,EAAOc,GAAI9B,MAAO,WAGvC,IADA,IAAIqB,EAAcR,EAND,GAMmBQ,YAC3BS,EAAE,EAAGA,EAAIT,EAAYU,OAAQD,IACpCD,EAAMG,KAAK,CAACvB,MAAOY,EAAYS,GAAI9B,MAAO,WAG5C,IAAIiC,EAAiBV,EAAKW,QAAQL,GAC9BM,EAAOC,YAAO,CAChBP,MAAOI,EACPlB,cAAeF,EAdA,GAckBE,cACjCE,OAAQJ,EAfO,GAeWI,OAC1BoB,UAAU,EACVC,WAjBe,EAkBfpB,UAAWL,EAlBI,GAkBcK,UAC7BC,YAAaN,EAnBE,GAmBgBM,YAC/BC,cAAeP,EApBA,GAoBkBO,cACjCmB,aAAc,KAvBC,OAyBjBhB,EAAKvB,MAAQ,CACXmC,KAAMA,GA1BSZ,uEA8BXrB,GACN,IAAK,IAAI4B,EAAI5B,EAAE6B,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACnC,IAAMU,EAAIC,KAAKC,MAAMD,KAAKE,UAAYb,EAAI,IADPc,EAEpB,CAAC1C,EAAEsC,GAAItC,EAAE4B,IAAvB5B,EAAE4B,GAFgCc,EAAA,GAE5B1C,EAAEsC,GAF0BI,EAAA,GAIvC,OAAO1C,sCAIG2C,GAAY,IAAAC,EAAArB,KAClBsB,EAAmBtB,KAAKzB,MAAMmC,KAAKa,IAAI,gBAAgBC,QAC3D,GAAyB,IAArBF,EAAJ,CAGA,IAAIG,EAAezB,KAAKzB,MAAMmC,KAAKgB,OAAO,eAAgB,SAACC,GAAD,OAAUA,EAAKpB,KAAKa,KAC9EQ,QAAQC,IAAIJ,GACZA,EAAeA,EAAaK,SAAS,CAAC,QAASV,GAC7C,SAACW,GAAD,OAAUA,EACPC,IAAI,QAAS,YAEdV,EAAmB,IAAM,EAC3BtB,KAAKiC,SACH,CAACvB,KAAMe,GAAe,kBACpBS,WACE,WACEb,EAAKc,gBACJ,OAITnC,KAAKiC,SAAS,CAACvB,KAAMe,4CAIV,IAAAW,EAAApC,KACTqC,EAAsBrC,KAAKzB,MAAMmC,KAAKa,IAAI,gBAAgBe,OAC9DV,QAAQC,IAAIQ,GACZ,IAAIE,EAAqBvC,KAAKzB,MAAMmC,KAAK8B,MAAM,CAAC,QAASH,EAAoB,GAAI,UACjFT,QAAQC,IAAIU,GACZ,IAAIE,EAAsBzC,KAAKzB,MAAMmC,KAAK8B,MAAM,CAAC,QAASH,EAAoB,GAAI,UAClFT,QAAQC,IAAIY,GACZ,IAAIhB,EAAezB,KAAKzB,MAAMmC,KAC1BV,KAAK0C,eAAeH,EAAoBE,IAC1Cb,QAAQC,IAAI,WAKZJ,GAJAA,EAAeA,EAAaK,SAAS,CAAC,QAASO,EAAoB,IACjE,SAACN,GAAD,OAAUA,EACPC,IAAI,QAAS,aAEUF,SAAS,CAAC,QAASO,EAAoB,IACjE,SAACN,GAAD,OAAUA,EACPC,IAAI,QAAS,cAOlBP,GAJAA,EAAeA,EAAaK,SAAS,CAAC,QAASO,EAAoB,IACjE,SAACN,GAAD,OAAUA,EACPC,IAAI,QAAS,aAEUF,SAAS,CAAC,QAASO,EAAoB,IACjE,SAACN,GAAD,OAAUA,EACPC,IAAI,QAAS,YAElBJ,QAAQC,IAAI,cAEdJ,EAAeA,EAAaC,OAAO,eAAgB,SAAAC,GAAI,OAAIA,EAAKgB,UAChE3C,KAAKiC,SAAS,CAACvB,KAAMe,GAAe,kBAAMW,EAAKQ,2DAGlCL,EAAoBE,GACjC,IAAIhD,EAAYO,KAAKzB,MAAMmC,KAAKa,IAAI,aAChCjC,EAAgBU,KAAKzB,MAAMmC,KAAKa,IAAI,iBACpC/B,EAASQ,KAAKzB,MAAMmC,KAAKa,IAAI,UAEjC,GAAsB,UAAlBjC,EAA2B,CAC7B,GAAkB,aAAdG,EACF,OAAI8C,EAAqB/C,IAAWiD,EAK/B,GAAkB,QAAdhD,EACT,OAAI8C,EAAqB/C,IAAWiD,OAMjC,GAAsB,UAAlBnD,EAA2B,CACpC,GAAkB,aAAdG,EACF,OAAID,EAAS+C,IAAuBE,EAK/B,GAAkB,QAAdhD,EACT,OAAID,EAAS+C,IAAuBE,OAOjC,GAAsB,UAAlBnD,EAA2B,CACpC,GAAkB,aAAdG,EACF,OAAI8C,EAAqBE,IAAwBjD,EAK5C,GAAkB,QAAdC,EACT,OAAI8C,EAAqBE,IAAwBjD,6CAerD,IAHA,IAAIqD,EAAazD,EAAMY,KAAKzB,MAAMmC,KAAKa,IAAI,eAAehC,OAAOe,OAC7DwC,EAAY9C,KAAKzB,MAAMmC,KAAKa,IAAI,SAASC,QACzCuB,EAAmB,EACd1C,EAAE,EAAGA,EAAEyC,EAAWzC,IAC4B,WAAjDL,KAAKzB,MAAMmC,KAAK8B,MAAM,CAAC,QAASnC,EAAG,YACrC0C,GAAoB,GAGxB,GAAIA,GAAoBF,EAAxB,CAIA,IAAIpB,EAAezB,KAAKzB,MAAMmC,KAAKgB,OAAO,WAAY,SAAA1C,GAAK,OAAI,IAC/DgB,KAAKiC,SAAS,CAACvB,KAAMe,IACrBG,QAAQC,IAAI,iBALVD,QAAQC,IAAI,oDAQJhB,GAGV,IAFA,IAAIT,EAAQ,GACRb,EAASH,EAAMyB,GAAYtB,OACtBc,EAAE,EAAGA,EAAId,EAAOe,OAAQD,IAC/BD,EAAMG,KAAK,CAACvB,MAAOO,EAAOc,GAAI9B,MAAO,WAGvC,IADA,IAAIqB,EAAcR,EAAMyB,GAAYjB,YAC3BS,EAAE,EAAGA,EAAIT,EAAYU,OAAQD,IACpCD,EAAMG,KAAK,CAACvB,MAAOY,EAAYS,GAAI9B,MAAO,WAG5C,IAAIiC,EAAiBR,KAAKS,QAAQL,GAE9BqB,EAAed,YAAO,CACxBP,MAAOI,EACPlB,cAAeF,EAAMyB,GAAYvB,cACjCE,OAAQJ,EAAMyB,GAAYrB,OAC1BoB,UAAU,EACVC,WAAYA,EACZpB,UAAWL,EAAMyB,GAAYpB,UAC7BC,YAAaN,EAAMyB,GAAYnB,YAC/BC,cAAeP,EAAMyB,GAAYlB,cACjCmB,aAAc,KAEhBc,QAAQC,IAAIJ,GACZzB,KAAKiC,SAAS,CAACvB,KAAMe,uCAGZpB,GACT,OACE7B,EAAAC,EAAAC,cAACqD,EAAD,CACEiB,IAAK3C,EACLrB,MAAOgB,KAAKzB,MAAMmC,KAAK8B,MAAM,CAAC,QAASnC,EAAG,UAC1CnB,MAAOmB,EACP9B,MAAOyB,KAAKzB,MAAMmC,KAAK8B,MAAM,CAAC,QAASnC,EAAG,UAC1CpB,QAASe,KAAKiD,YAAYC,KAAKlD,8CAMnC,IADA,IAAII,EAAQ,GACHC,EAAE,EAAGA,EAAEL,KAAKzB,MAAMmC,KAAKa,IAAI,SAAS4B,KAAM9C,IACjDD,EAAMG,KACJ/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQT,MAAO,CAACkF,QAAS,aACrCpD,KAAKqD,WAAWhD,KAIvB,OAAOD,uCAIP,IAAIiC,EAAsBrC,KAAKzB,MAAMmC,KAAKa,IAAI,gBAAgBe,OAC1DC,EAAqB,GACrBE,EAAsB,GACtBJ,EAAoB/B,QAAU,IAChCiC,EAAqBvC,KAAKzB,MAAMmC,KAAK8B,MAAM,CAAC,QAASH,EAAoB,GAAI,WAE5C,IAA/BA,EAAoB/B,SACtBmC,EAAsBzC,KAAKzB,MAAMmC,KAAK8B,MAAM,CAAC,QAASH,EAAoB,GAAI,WAEhF,IAAI/C,EAAgBU,KAAKzB,MAAMmC,KAAKa,IAAI,iBACpC5B,EAAgBK,KAAKzB,MAAMmC,KAAKa,IAAI,iBAAiBe,OACzD,MAAsB,UAAlBhD,EAEAd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAC4E,EAAD,CAAKtE,MAAOuD,KAEd/D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,MAAIR,MAAO,CAACkF,QAAS,aAAczD,EAAc,KAEnDnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAC4E,EAAD,CAAKtE,MAAOyD,MAIS,UAAlBnD,EAEPd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,MAAIR,MAAO,CAACkF,QAAS,aAAczD,EAAc,KAEnDnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAC4E,EAAD,CAAKtE,MAAOuD,KAEd/D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,MAAIR,MAAO,CAACkF,QAAS,aAAczD,EAAc,KAEnDnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAC4E,EAAD,CAAKtE,MAAOyD,MAIS,UAAlBnD,EAEPd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAC4E,EAAD,CAAKtE,MAAOuD,KAEd/D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,MAAIR,MAAO,CAACkF,QAAS,aAAczD,EAAc,KAEnDnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAC4E,EAAD,CAAKtE,MAAOyD,KAEdjE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,MAAIR,MAAO,CAACkF,QAAS,aAAczD,EAAc,WAblD,8CAuBP,IADA,IAAI4D,EAAU,GACLlD,EAAE,EAAGA,EAAEjB,EAAMkB,OAAQD,IAC5BkD,EAAQhD,KACP/B,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAgBM,QAASe,KAAKwD,YAAYN,KAAKlD,KAAMK,IAAMjB,EAAMiB,GAAGhB,QAGxF,OAAOkE,+CAIP,OACE/E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,oCAAoC8E,KAAK,SAASC,GAAG,qBAAqBC,cAAY,WAAWC,gBAAc,OAAOC,gBAAc,SAAtJ,eAGArF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBAAgB+E,GAAG,YAC9B1D,KAAK8D,uDAOZ,GAAI9D,KAAKzB,MAAMmC,KAAKa,IAAI,YAAa,CACnC,IAAIV,EAAab,KAAKzB,MAAMmC,KAAKa,IAAI,cACrC,OACE/C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,wBAEFF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,yBAAyBM,QAASe,KAAKwD,YAAYN,KAAKlD,KAAMa,IAAhF,eAMN,OACErC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACZqB,KAAK+D,sBAERvF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,UAAKsB,KAAKzB,MAAMmC,KAAKa,IAAI,eAAzB,MAEDvB,KAAKgE,aACNxF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACZqB,KAAKiE,uBA3UIC,IAAMC,WAkVpBC,mLAEF,OACE5F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYT,MAAO,CAACkF,QAAS,SAC1C5E,EAAAC,EAAAC,cAAC2F,EAAD,eALSH,IAAMC,WAezBG,IAASC,OACP/F,EAAAC,EAAAC,cAAC8F,EAAD,MACAC,SAASC,eAAe","file":"static/js/main.f4d1237d.chunk.js","sourcesContent":["import React from 'react'\n\nconst style = {\n  height: '100%',\n  width: '70%'\n}\n\n\nfunction Card(props) {\n  if (props.state === \"hidden\") {\n    return (\n      <button className=\"btn btn-primary btn-lg\" disabled={true} style={Object.assign({}, style, {opacity: 0})}>\n        {props.value}\n      </button>\n    ) \n  } else if (props.state === \"chosen\") {\n    return (\n      <button className=\"btn btn-light btn-lg\" disabled={true} style={style}>\n        {props.value}\n      </button>\n    ) \n  } else {\n    return (\n      <button className=\"btn btn-primary btn-lg\" style={style} onClick={() => props.onClick(props.index)}>\n        {props.value}\n      </button>\n    );\n  }\n}\n\nexport default Card\n","import React from 'react'\n\nconst style = {\n  width: '100%',\n  height: '60%',\n}\n\n\nfunction Bin(props) {\n  return (\n    <button className=\"btn btn-outline-dark btn-lg\" disabled={true} style={style}>\n      {props.value}\n    </button>\n  );\n}\n\nexport default Bin\n","export default [\n  {\n    name: \"7 times table\",\n    question_type: \"_*n=_\",\n    values: [3, 21, 4, 28, 5, 35, 6, 42, 7, 49, 8, 56],\n    answer: 7,\n    operation: 'multiply',\n    instruction: \"Choose two cards that make the sentence correct\",\n    question_text: [\"times 7 is\"],\n    distractors: [],\n  },\n  { \n    name: \"13 tables w distractor\",\n    question_type: \"n*_=_\",\n    values: [2, 26, 3, 39, 4, 52, 6, 78, 7, 91],\n    answer: 13,\n    operation: 'multiply',\n    instruction: \"Choose two cards that make the sentence correct\",\n    question_text: [\"13 x\", \"is\"],\n    distractors: [75, 5],\n  },\n  {\n    name: \"Number bonds to 10\",\n    question_type: \"_*_=n\",\n    values: [0, 10, 1, 9, 2, 8, 3, 7, 4, 6, 5, 5],\n    answer: 10,\n    operation: 'add',\n    instruction: \"Choose two cards that add to 10\",\n    question_text: [\"add\", \"is 10\"],\n    distractors: [],\n  },\n  {\n    name: \"Negative number bonds\",\n    question_type: \"_*_=n\",\n    values: [-5, 10, 7, -2, 1, 4, -1, 6, -4, 9, -3, 8],\n    answer: 5,\n    operation: 'add',\n    instruction: \"Choose two cards that add to make 5\",\n    question_text: [\"add\", \"is 5\"],\n    distractors: [],\n  },\n  {\n    name: \"Multiplying negatives\",\n    question_type: \"_*_=n\",\n    values: [-1, 12, 1, -12, 3, -4, -3, 4, 2, -6, 2, -6],\n    answer: -12,\n    operation: 'multiply',\n    instruction: \"Choose two numbers that multiply to give -12\",\n    question_text: [\"times\", \"is -12\"],\n    distractors: [],\n  },\n]\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport 'jquery/dist/jquery.min.js'\nimport 'bootstrap/dist/js/bootstrap.min.js'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { fromJS } from \"immutable\";\n\nimport './styles.css'\nimport Card from './card.js'\nimport Bin from './bin.js'\nimport games from './games.js'\n\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    let game_index = 2\n    let cards = []\n    let values = games[game_index].values\n    for (let i=0; i < values.length; i++) {\n      cards.push({value: values[i], state: 'normal'})\n    }\n    let distractors = games[game_index].distractors\n    for (let i=0; i < distractors.length; i++) {\n      cards.push({value: distractors[i], state: 'normal'})\n    }\n\n    let shuffled_cards = this.shuffle(cards)\n    let data = fromJS({\n      cards: shuffled_cards,\n      question_type: games[game_index].question_type,\n      answer: games[game_index].answer,\n      complete: false,\n      game_index: game_index,\n      operation: games[game_index].operation,\n      instruction: games[game_index].instruction,\n      question_text: games[game_index].question_text,\n      chosen_cards: [],\n    })\n    this.state = {\n      data: data\n    }\n  }\n\n  shuffle(a) {\n    for (let i = a.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [a[i], a[j]] = [a[j], a[i]];\n    }\n    return a;\n  } \n\n\n  handleClick(card_index) {\n    let num_chosen_cards = this.state.data.get('chosen_cards').count()\n    if (num_chosen_cards === 2) {\n      return\n    }\n    let newStateData = this.state.data.update(\"chosen_cards\", (list) => list.push(card_index))\n    console.log(newStateData)\n    newStateData = newStateData.updateIn([\"cards\", card_index], \n      (card) => card\n        .set('state', 'chosen')\n    )\n    if (num_chosen_cards + 1 === 2) {\n      this.setState(\n        {data: newStateData}, () => \n          setTimeout(\n            () => {\n              this.handleAnswer()\n            }, 500\n          )\n        )\n    } else {\n      this.setState({data: newStateData})\n    }\n  }\n\n  handleAnswer() {\n    let chosen_card_indexes = this.state.data.get('chosen_cards').toJS()\n    console.log(chosen_card_indexes)\n    let first_chosen_value = this.state.data.getIn(['cards', chosen_card_indexes[0], 'value'])\n    console.log(first_chosen_value)\n    let second_chosen_value = this.state.data.getIn(['cards', chosen_card_indexes[1], 'value'])\n    console.log(second_chosen_value)\n    let newStateData = this.state.data\n    if (this.checkIfCorrect(first_chosen_value, second_chosen_value)) {\n      console.log(\"correct\")\n      newStateData = newStateData.updateIn([\"cards\", chosen_card_indexes[0]],\n        (card) => card\n          .set('state', 'hidden')\n      )\n      newStateData = newStateData.updateIn([\"cards\", chosen_card_indexes[1]], \n        (card) => card\n          .set('state', 'hidden')\n      )\n    } else {\n      newStateData = newStateData.updateIn([\"cards\", chosen_card_indexes[0]],\n        (card) => card\n          .set('state', 'normal')\n      )\n      newStateData = newStateData.updateIn([\"cards\", chosen_card_indexes[1]], \n        (card) => card\n          .set('state', 'normal')\n      )\n      console.log('incorrect')\n    }\n    newStateData = newStateData.update('chosen_cards', list => list.clear())\n    this.setState({data: newStateData}, () => this.checkIfComplete())\n  }\n\n  checkIfCorrect(first_chosen_value, second_chosen_value) {\n    let operation = this.state.data.get('operation')\n    let question_type = this.state.data.get('question_type')\n    let answer = this.state.data.get('answer')\n\n    if (question_type === \"_*n=_\") {\n      if (operation === \"multiply\") {\n        if (first_chosen_value * answer === second_chosen_value) {\n          return true\n        } else {\n          return false\n        }\n      } else if (operation === \"add\") {\n        if (first_chosen_value + answer === second_chosen_value) {\n          return true\n        } else {\n          return false\n        }\n      }\n    } else if (question_type === \"n*_=_\") {\n      if (operation === \"multiply\") {\n        if (answer * first_chosen_value === second_chosen_value) {\n          return true\n        } else {\n          return false\n        }\n      } else if (operation === \"add\") {\n        if (answer + first_chosen_value === second_chosen_value) {\n          return true\n        } else {\n          return false\n        }\n      }\n\n    } else if (question_type === \"_*_=n\") {\n      if (operation === \"multiply\") {\n        if (first_chosen_value * second_chosen_value === answer) {\n          return true\n        } else {\n          return false\n        }\n      } else if (operation === \"add\") {\n        if (first_chosen_value + second_chosen_value === answer) {\n          return true\n        } else {\n          return false\n        }\n      }\n   \n    }\n  }\n\n\n  checkIfComplete() {\n    let num_values = games[this.state.data.get('game_index')].values.length\n    let num_cards = this.state.data.get('cards').count()\n    let num_hidden_cards = 0\n    for (var i=0; i<num_cards; i++) {\n      if (this.state.data.getIn(['cards', i, 'state']) === \"hidden\") {\n        num_hidden_cards += 1\n      }\n    }\n    if (num_hidden_cards != num_values) {\n      console.log('not complete')\n      return\n    }\n    let newStateData = this.state.data.update(\"complete\", value => true)\n    this.setState({data: newStateData})\n    console.log('complete')\n  }\n\n  restartGame(game_index) {\n    let cards = []\n    let values = games[game_index].values\n    for (let i=0; i < values.length; i++) {\n      cards.push({value: values[i], state: 'normal'})\n    }\n    let distractors = games[game_index].distractors\n    for (let i=0; i < distractors.length; i++) {\n      cards.push({value: distractors[i], state: 'normal'})\n    }\n\n    let shuffled_cards = this.shuffle(cards)\n\n    let newStateData = fromJS({\n      cards: shuffled_cards,\n      question_type: games[game_index].question_type,\n      answer: games[game_index].answer,\n      complete: false,\n      game_index: game_index,\n      operation: games[game_index].operation,\n      instruction: games[game_index].instruction,\n      question_text: games[game_index].question_text,\n      chosen_cards: [],\n    })\n    console.log(newStateData)\n    this.setState({data: newStateData})\n  }\n\n  renderCard(i) {\n    return (\n      <Card \n        key={i}\n        value={this.state.data.getIn(['cards', i, 'value'])}\n        index={i}\n        state={this.state.data.getIn(['cards', i, 'state'])}\n        onClick={this.handleClick.bind(this)}\n      />\n    );\n  }\n  renderCards() {\n    let cards = []\n    for (let i=0; i<this.state.data.get('cards').size; i++) {\n      cards.push(\n        <div className=\"col-3\" style={{padding: '20px 0px'}}>\n          {this.renderCard(i)}\n        </div>\n      )\n    }\n    return cards\n  }\n\n  renderBins() {\n    let chosen_card_indexes = this.state.data.get('chosen_cards').toJS()\n    let first_chosen_value = \"\";\n    let second_chosen_value = \"\";\n    if (chosen_card_indexes.length >= 1) {\n      first_chosen_value = this.state.data.getIn(['cards', chosen_card_indexes[0], 'value']);\n    }\n    if (chosen_card_indexes.length === 2) {\n      second_chosen_value = this.state.data.getIn(['cards', chosen_card_indexes[1], 'value']);\n    }\n    let question_type = this.state.data.get('question_type')\n    let question_text = this.state.data.get('question_text').toJS()\n    if (question_type === \"_*n=_\") {\n      return (\n        <div className=\"row\">\n          <div className=\"col-3\">\n            <Bin value={first_chosen_value}/>\n          </div>\n          <div className=\"col-6\">\n            <h4 style={{padding: '20px 0px'}}>{question_text[0]}</h4>\n          </div>\n          <div className=\"col-3\">\n            <Bin value={second_chosen_value}/>\n          </div>\n        </div>\n      )\n    } else if (question_type === \"n*_=_\") {\n      return (\n        <div className=\"row\">\n          <div className=\"col-3\">\n            <h4 style={{padding: '20px 0px'}}>{question_text[0]}</h4>\n          </div>\n          <div className=\"col-3\">\n            <Bin value={first_chosen_value}/>\n          </div>\n          <div className=\"col-3\">\n            <h4 style={{padding: '20px 0px'}}>{question_text[1]}</h4>\n          </div>\n          <div className=\"col-3\">\n            <Bin value={second_chosen_value}/>\n          </div>\n        </div>\n      )\n    } else if (question_type === \"_*_=n\") {\n      return (\n        <div className=\"row\">\n          <div className=\"col-3\">\n            <Bin value={first_chosen_value}/>\n          </div>\n          <div className=\"col-3\">\n            <h4 style={{padding: '20px 0px'}}>{question_text[0]}</h4>\n          </div>\n          <div className=\"col-3\">\n            <Bin value={second_chosen_value}/>\n          </div>\n          <div className=\"col-3\">\n            <h4 style={{padding: '20px 0px'}}>{question_text[1]}</h4>\n          </div>\n        </div>\n      )\n    }\n  }\n\n\n  renderGameOptions() {\n    let options = []\n    for (var i=0; i<games.length; i++) {\n      options.push(\n       <li><a className=\"dropdown-item\" onClick={this.restartGame.bind(this, i)} >{games[i].name}</a></li>\n      )\n    }\n    return options\n  }\n\n  renderGameDropdown() {\n    return (\n      <div className=\"dropdown col-1 offset-5\">\n        <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n          Switch game\n        </button>\n        <ul className=\"dropdown-menu\" id=\"dropdown\">\n          {this.renderGameOptions()}\n        </ul>\n      </div>\n    );\n  }\n\n  render() {\n    if (this.state.data.get('complete')) {\n      let game_index = this.state.data.get('game_index')\n      return (\n        <div>\n          <div>\n            <h3>Nice one!</h3>\n          </div>\n          <button className=\"btn btn-primary btn-lg\" onClick={this.restartGame.bind(this, game_index)}>\n            Play again\n          </button>\n        </div>\n      )\n    }\n    return (\n      <div>\n        <div className=\"row\">\n          {this.renderGameDropdown()}\n        </div>\n        <div className=\"row\">\n          <h3>{this.state.data.get('instruction')} </h3>\n        </div>\n        {this.renderBins()}\n        <div className=\"row\">\n          {this.renderCards()}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  render() {\n    return (\n      <div className=\"game\">\n        <div className=\"container\" style={{padding: \"20px\"}}>\n          <Board />\n        </div>\n      </div>\n    );\n  }\n}\n\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}